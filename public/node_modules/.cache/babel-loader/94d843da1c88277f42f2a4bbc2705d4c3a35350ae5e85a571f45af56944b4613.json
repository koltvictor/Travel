{"ast":null,"code":"var _jsxFileName = \"/Users/kolt/Development/MapboxProject/map_app/src/components/CountrySelect.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport parse from 'autosuggest-highlight/parse';\nimport { debounce } from '@mui/material/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_API_KEY = 'AIzaSyBHk2OdbQzyiXx5QJRnaOQ7Q4ixgEoPQ68';\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n  const script = document.createElement('script');\n  script.setAttribute('async', '');\n  script.setAttribute('id', id);\n  script.src = src;\n  position.appendChild(script);\n}\nconst autocompleteService = {\n  current: null\n};\nexport default function GoogleMaps(_ref) {\n  _s();\n  let {\n    onChange\n  } = _ref;\n  const [value, setValue] = React.useState(null);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n  const loaded = React.useRef(false);\n  console.log(onChange);\n  if (typeof window !== 'undefined' && !loaded.current) {\n    if (!document.querySelector('#google-maps')) {\n      loadScript(`https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&libraries=places`, document.querySelector('head'), 'google-maps');\n    }\n    loaded.current = true;\n  }\n  const fetch = React.useMemo(() => debounce((request, callback) => {\n    autocompleteService.current.getPlacePredictions(request, callback);\n  }, 400), []);\n  React.useEffect(() => {\n    let active = true;\n    if (!autocompleteService.current && window.google) {\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\n    }\n    if (!autocompleteService.current) {\n      return undefined;\n    }\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n    fetch({\n      input: inputValue\n    }, results => {\n      if (active) {\n        let newOptions = [];\n        if (value) {\n          newOptions = [value];\n        }\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n        setOptions(newOptions);\n      }\n    });\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue, fetch]);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    id: \"google-map-demo\",\n    sx: {\n      width: 300\n    },\n    getOptionLabel: option => typeof option === 'string' ? option : option.description,\n    filterOptions: x => x,\n    options: options,\n    autoComplete: true,\n    includeInputInList: true,\n    filterSelectedOptions: true,\n    value: value,\n    noOptionsText: \"No locations\",\n    onChange: (event, newValue) => {\n      setOptions(newValue ? [newValue, ...options] : options);\n      setValue(newValue);\n    },\n    onInputChange: (event, newInputValue) => {\n      onChange(newInputValue);\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: \"Desired Destination\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this),\n    renderOption: (props, option) => {\n      const matches = option.structured_formatting.main_text_matched_substrings || [];\n      const parts = parse(option.structured_formatting.main_text, matches.map(match => [match.offset, match.offset + match.length]));\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        ...props,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              display: 'flex',\n              width: 44\n            },\n            children: /*#__PURE__*/_jsxDEV(LocationOnIcon, {\n              sx: {\n                color: 'text.secondary'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              width: 'calc(100% - 44px)',\n              wordWrap: 'break-word'\n            },\n            children: [parts.map((part, index) => /*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              sx: {\n                fontWeight: part.highlight ? 'bold' : 'regular'\n              },\n              children: part.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: option.structured_formatting.secondary_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import Autocomplete from '@mui/material/Autocomplete';\n\n// export default function CountrySelect() {\n//   return (\n//     <Autocomplete\n//       id=\"country-select-demo\"\n//       sx={{ width: 300 }}\n//       options={countries}\n//       autoHighlight\n//       getOptionLabel={(option) => option.label}\n//       renderOption={(props, option) => (\n//         <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\n//           <img\n//             loading=\"lazy\"\n//             width=\"20\"\n//             src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n//             srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n//             alt=\"\"\n//           />\n//           {option.label} ({option.code}) +{option.phone}\n//         </Box>\n//       )}\n//       renderInput={(params) => (\n//         <TextField\n//           {...params}\n//           label=\"Choose a country\"\n//           inputProps={{\n//             ...params.inputProps,\n//             autoComplete: 'new-password', // disable autocomplete and autofill\n//           }}\n//         />\n//       )}\n//     />\n//   );\n// }\n\n// const countries  = [\n//   { code: 'AD', label: 'Andorra', phone: '376' },\n//   {\n//     code: 'AE',\n//     label: 'United Arab Emirates',\n//     phone: '971',\n//   },\n//   { code: 'AF', label: 'Afghanistan', phone: '93' },\n//   {\n//     code: 'AG',\n//     label: 'Antigua and Barbuda',\n//     phone: '1-268',\n//   },\n//   { code: 'AI', label: 'Anguilla', phone: '1-264' },\n//   { code: 'AL', label: 'Albania', phone: '355' },\n//   { code: 'AM', label: 'Armenia', phone: '374' },\n//   { code: 'AO', label: 'Angola', phone: '244' },\n//   { code: 'AQ', label: 'Antarctica', phone: '672' },\n//   { code: 'AR', label: 'Argentina', phone: '54' },\n//   { code: 'AS', label: 'American Samoa', phone: '1-684' },\n//   { code: 'AT', label: 'Austria', phone: '43' },\n//   {\n//     code: 'AU',\n//     label: 'Australia',\n//     phone: '61',\n//     suggested: true,\n//   },\n//   { code: 'AW', label: 'Aruba', phone: '297' },\n//   { code: 'AX', label: 'Alland Islands', phone: '358' },\n//   { code: 'AZ', label: 'Azerbaijan', phone: '994' },\n//   {\n//     code: 'BA',\n//     label: 'Bosnia and Herzegovina',\n//     phone: '387',\n//   },\n//   { code: 'BB', label: 'Barbados', phone: '1-246' },\n//   { code: 'BD', label: 'Bangladesh', phone: '880' },\n//   { code: 'BE', label: 'Belgium', phone: '32' },\n//   { code: 'BF', label: 'Burkina Faso', phone: '226' },\n//   { code: 'BG', label: 'Bulgaria', phone: '359' },\n//   { code: 'BH', label: 'Bahrain', phone: '973' },\n//   { code: 'BI', label: 'Burundi', phone: '257' },\n//   { code: 'BJ', label: 'Benin', phone: '229' },\n//   { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\n//   { code: 'BM', label: 'Bermuda', phone: '1-441' },\n//   { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\n//   { code: 'BO', label: 'Bolivia', phone: '591' },\n//   { code: 'BR', label: 'Brazil', phone: '55' },\n//   { code: 'BS', label: 'Bahamas', phone: '1-242' },\n//   { code: 'BT', label: 'Bhutan', phone: '975' },\n//   { code: 'BV', label: 'Bouvet Island', phone: '47' },\n//   { code: 'BW', label: 'Botswana', phone: '267' },\n//   { code: 'BY', label: 'Belarus', phone: '375' },\n//   { code: 'BZ', label: 'Belize', phone: '501' },\n//   {\n//     code: 'CA',\n//     label: 'Canada',\n//     phone: '1',\n//     suggested: true,\n//   },\n//   {\n//     code: 'CC',\n//     label: 'Cocos (Keeling) Islands',\n//     phone: '61',\n//   },\n//   {\n//     code: 'CD',\n//     label: 'Congo, Democratic Republic of the',\n//     phone: '243',\n//   },\n//   {\n//     code: 'CF',\n//     label: 'Central African Republic',\n//     phone: '236',\n//   },\n//   {\n//     code: 'CG',\n//     label: 'Congo, Republic of the',\n//     phone: '242',\n//   },\n//   { code: 'CH', label: 'Switzerland', phone: '41' },\n//   { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\n//   { code: 'CK', label: 'Cook Islands', phone: '682' },\n//   { code: 'CL', label: 'Chile', phone: '56' },\n//   { code: 'CM', label: 'Cameroon', phone: '237' },\n//   { code: 'CN', label: 'China', phone: '86' },\n//   { code: 'CO', label: 'Colombia', phone: '57' },\n//   { code: 'CR', label: 'Costa Rica', phone: '506' },\n//   { code: 'CU', label: 'Cuba', phone: '53' },\n//   { code: 'CV', label: 'Cape Verde', phone: '238' },\n//   { code: 'CW', label: 'Curacao', phone: '599' },\n//   { code: 'CX', label: 'Christmas Island', phone: '61' },\n//   { code: 'CY', label: 'Cyprus', phone: '357' },\n//   { code: 'CZ', label: 'Czech Republic', phone: '420' },\n//   {\n//     code: 'DE',\n//     label: 'Germany',\n//     phone: '49',\n//     suggested: true,\n//   },\n//   { code: 'DJ', label: 'Djibouti', phone: '253' },\n//   { code: 'DK', label: 'Denmark', phone: '45' },\n//   { code: 'DM', label: 'Dominica', phone: '1-767' },\n//   {\n//     code: 'DO',\n//     label: 'Dominican Republic',\n//     phone: '1-809',\n//   },\n//   { code: 'DZ', label: 'Algeria', phone: '213' },\n//   { code: 'EC', label: 'Ecuador', phone: '593' },\n//   { code: 'EE', label: 'Estonia', phone: '372' },\n//   { code: 'EG', label: 'Egypt', phone: '20' },\n//   { code: 'EH', label: 'Western Sahara', phone: '212' },\n//   { code: 'ER', label: 'Eritrea', phone: '291' },\n//   { code: 'ES', label: 'Spain', phone: '34' },\n//   { code: 'ET', label: 'Ethiopia', phone: '251' },\n//   { code: 'FI', label: 'Finland', phone: '358' },\n//   { code: 'FJ', label: 'Fiji', phone: '679' },\n//   {\n//     code: 'FK',\n//     label: 'Falkland Islands (Malvinas)',\n//     phone: '500',\n//   },\n//   {\n//     code: 'FM',\n//     label: 'Micronesia, Federated States of',\n//     phone: '691',\n//   },\n//   { code: 'FO', label: 'Faroe Islands', phone: '298' },\n//   {\n//     code: 'FR',\n//     label: 'France',\n//     phone: '33',\n//     suggested: true,\n//   },\n//   { code: 'GA', label: 'Gabon', phone: '241' },\n//   { code: 'GB', label: 'United Kingdom', phone: '44' },\n//   { code: 'GD', label: 'Grenada', phone: '1-473' },\n//   { code: 'GE', label: 'Georgia', phone: '995' },\n//   { code: 'GF', label: 'French Guiana', phone: '594' },\n//   { code: 'GG', label: 'Guernsey', phone: '44' },\n//   { code: 'GH', label: 'Ghana', phone: '233' },\n//   { code: 'GI', label: 'Gibraltar', phone: '350' },\n//   { code: 'GL', label: 'Greenland', phone: '299' },\n//   { code: 'GM', label: 'Gambia', phone: '220' },\n//   { code: 'GN', label: 'Guinea', phone: '224' },\n//   { code: 'GP', label: 'Guadeloupe', phone: '590' },\n//   { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\n//   { code: 'GR', label: 'Greece', phone: '30' },\n//   {\n//     code: 'GS',\n//     label: 'South Georgia and the South Sandwich Islands',\n//     phone: '500',\n//   },\n//   { code: 'GT', label: 'Guatemala', phone: '502' },\n//   { code: 'GU', label: 'Guam', phone: '1-671' },\n//   { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\n//   { code: 'GY', label: 'Guyana', phone: '592' },\n//   { code: 'HK', label: 'Hong Kong', phone: '852' },\n//   {\n//     code: 'HM',\n//     label: 'Heard Island and McDonald Islands',\n//     phone: '672',\n//   },\n//   { code: 'HN', label: 'Honduras', phone: '504' },\n//   { code: 'HR', label: 'Croatia', phone: '385' },\n//   { code: 'HT', label: 'Haiti', phone: '509' },\n//   { code: 'HU', label: 'Hungary', phone: '36' },\n//   { code: 'ID', label: 'Indonesia', phone: '62' },\n//   { code: 'IE', label: 'Ireland', phone: '353' },\n//   { code: 'IL', label: 'Israel', phone: '972' },\n//   { code: 'IM', label: 'Isle of Man', phone: '44' },\n//   { code: 'IN', label: 'India', phone: '91' },\n//   {\n//     code: 'IO',\n//     label: 'British Indian Ocean Territory',\n//     phone: '246',\n//   },\n//   { code: 'IQ', label: 'Iraq', phone: '964' },\n//   {\n//     code: 'IR',\n//     label: 'Iran, Islamic Republic of',\n//     phone: '98',\n//   },\n//   { code: 'IS', label: 'Iceland', phone: '354' },\n//   { code: 'IT', label: 'Italy', phone: '39' },\n//   { code: 'JE', label: 'Jersey', phone: '44' },\n//   { code: 'JM', label: 'Jamaica', phone: '1-876' },\n//   { code: 'JO', label: 'Jordan', phone: '962' },\n//   {\n//     code: 'JP',\n//     label: 'Japan',\n//     phone: '81',\n//     suggested: true,\n//   },\n//   { code: 'KE', label: 'Kenya', phone: '254' },\n//   { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\n//   { code: 'KH', label: 'Cambodia', phone: '855' },\n//   { code: 'KI', label: 'Kiribati', phone: '686' },\n//   { code: 'KM', label: 'Comoros', phone: '269' },\n//   {\n//     code: 'KN',\n//     label: 'Saint Kitts and Nevis',\n//     phone: '1-869',\n//   },\n//   {\n//     code: 'KP',\n//     label: \"Korea, Democratic People's Republic of\",\n//     phone: '850',\n//   },\n//   { code: 'KR', label: 'Korea, Republic of', phone: '82' },\n//   { code: 'KW', label: 'Kuwait', phone: '965' },\n//   { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\n//   { code: 'KZ', label: 'Kazakhstan', phone: '7' },\n//   {\n//     code: 'LA',\n//     label: \"Lao People's Democratic Republic\",\n//     phone: '856',\n//   },\n//   { code: 'LB', label: 'Lebanon', phone: '961' },\n//   { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\n//   { code: 'LI', label: 'Liechtenstein', phone: '423' },\n//   { code: 'LK', label: 'Sri Lanka', phone: '94' },\n//   { code: 'LR', label: 'Liberia', phone: '231' },\n//   { code: 'LS', label: 'Lesotho', phone: '266' },\n//   { code: 'LT', label: 'Lithuania', phone: '370' },\n//   { code: 'LU', label: 'Luxembourg', phone: '352' },\n//   { code: 'LV', label: 'Latvia', phone: '371' },\n//   { code: 'LY', label: 'Libya', phone: '218' },\n//   { code: 'MA', label: 'Morocco', phone: '212' },\n//   { code: 'MC', label: 'Monaco', phone: '377' },\n//   {\n//     code: 'MD',\n//     label: 'Moldova, Republic of',\n//     phone: '373',\n//   },\n//   { code: 'ME', label: 'Montenegro', phone: '382' },\n//   {\n//     code: 'MF',\n//     label: 'Saint Martin (French part)',\n//     phone: '590',\n//   },\n//   { code: 'MG', label: 'Madagascar', phone: '261' },\n//   { code: 'MH', label: 'Marshall Islands', phone: '692' },\n//   {\n//     code: 'MK',\n//     label: 'Macedonia, the Former Yugoslav Republic of',\n//     phone: '389',\n//   },\n//   { code: 'ML', label: 'Mali', phone: '223' },\n//   { code: 'MM', label: 'Myanmar', phone: '95' },\n//   { code: 'MN', label: 'Mongolia', phone: '976' },\n//   { code: 'MO', label: 'Macao', phone: '853' },\n//   {\n//     code: 'MP',\n//     label: 'Northern Mariana Islands',\n//     phone: '1-670',\n//   },\n//   { code: 'MQ', label: 'Martinique', phone: '596' },\n//   { code: 'MR', label: 'Mauritania', phone: '222' },\n//   { code: 'MS', label: 'Montserrat', phone: '1-664' },\n//   { code: 'MT', label: 'Malta', phone: '356' },\n//   { code: 'MU', label: 'Mauritius', phone: '230' },\n//   { code: 'MV', label: 'Maldives', phone: '960' },\n//   { code: 'MW', label: 'Malawi', phone: '265' },\n//   { code: 'MX', label: 'Mexico', phone: '52' },\n//   { code: 'MY', label: 'Malaysia', phone: '60' },\n//   { code: 'MZ', label: 'Mozambique', phone: '258' },\n//   { code: 'NA', label: 'Namibia', phone: '264' },\n//   { code: 'NC', label: 'New Caledonia', phone: '687' },\n//   { code: 'NE', label: 'Niger', phone: '227' },\n//   { code: 'NF', label: 'Norfolk Island', phone: '672' },\n//   { code: 'NG', label: 'Nigeria', phone: '234' },\n//   { code: 'NI', label: 'Nicaragua', phone: '505' },\n//   { code: 'NL', label: 'Netherlands', phone: '31' },\n//   { code: 'NO', label: 'Norway', phone: '47' },\n//   { code: 'NP', label: 'Nepal', phone: '977' },\n//   { code: 'NR', label: 'Nauru', phone: '674' },\n//   { code: 'NU', label: 'Niue', phone: '683' },\n//   { code: 'NZ', label: 'New Zealand', phone: '64' },\n//   { code: 'OM', label: 'Oman', phone: '968' },\n//   { code: 'PA', label: 'Panama', phone: '507' },\n//   { code: 'PE', label: 'Peru', phone: '51' },\n//   { code: 'PF', label: 'French Polynesia', phone: '689' },\n//   { code: 'PG', label: 'Papua New Guinea', phone: '675' },\n//   { code: 'PH', label: 'Philippines', phone: '63' },\n//   { code: 'PK', label: 'Pakistan', phone: '92' },\n//   { code: 'PL', label: 'Poland', phone: '48' },\n//   {\n//     code: 'PM',\n//     label: 'Saint Pierre and Miquelon',\n//     phone: '508',\n//   },\n//   { code: 'PN', label: 'Pitcairn', phone: '870' },\n//   { code: 'PR', label: 'Puerto Rico', phone: '1' },\n//   {\n//     code: 'PS',\n//     label: 'Palestine, State of',\n//     phone: '970',\n//   },\n//   { code: 'PT', label: 'Portugal', phone: '351' },\n//   { code: 'PW', label: 'Palau', phone: '680' },\n//   { code: 'PY', label: 'Paraguay', phone: '595' },\n//   { code: 'QA', label: 'Qatar', phone: '974' },\n//   { code: 'RE', label: 'Reunion', phone: '262' },\n//   { code: 'RO', label: 'Romania', phone: '40' },\n//   { code: 'RS', label: 'Serbia', phone: '381' },\n//   { code: 'RU', label: 'Russian Federation', phone: '7' },\n//   { code: 'RW', label: 'Rwanda', phone: '250' },\n//   { code: 'SA', label: 'Saudi Arabia', phone: '966' },\n//   { code: 'SB', label: 'Solomon Islands', phone: '677' },\n//   { code: 'SC', label: 'Seychelles', phone: '248' },\n//   { code: 'SD', label: 'Sudan', phone: '249' },\n//   { code: 'SE', label: 'Sweden', phone: '46' },\n//   { code: 'SG', label: 'Singapore', phone: '65' },\n//   { code: 'SH', label: 'Saint Helena', phone: '290' },\n//   { code: 'SI', label: 'Slovenia', phone: '386' },\n//   {\n//     code: 'SJ',\n//     label: 'Svalbard and Jan Mayen',\n//     phone: '47',\n//   },\n//   { code: 'SK', label: 'Slovakia', phone: '421' },\n//   { code: 'SL', label: 'Sierra Leone', phone: '232' },\n//   { code: 'SM', label: 'San Marino', phone: '378' },\n//   { code: 'SN', label: 'Senegal', phone: '221' },\n//   { code: 'SO', label: 'Somalia', phone: '252' },\n//   { code: 'SR', label: 'Suriname', phone: '597' },\n//   { code: 'SS', label: 'South Sudan', phone: '211' },\n//   {\n//     code: 'ST',\n//     label: 'Sao Tome and Principe',\n//     phone: '239',\n//   },\n//   { code: 'SV', label: 'El Salvador', phone: '503' },\n//   {\n//     code: 'SX',\n//     label: 'Sint Maarten (Dutch part)',\n//     phone: '1-721',\n//   },\n//   {\n//     code: 'SY',\n//     label: 'Syrian Arab Republic',\n//     phone: '963',\n//   },\n//   { code: 'SZ', label: 'Swaziland', phone: '268' },\n//   {\n//     code: 'TC',\n//     label: 'Turks and Caicos Islands',\n//     phone: '1-649',\n//   },\n//   { code: 'TD', label: 'Chad', phone: '235' },\n//   {\n//     code: 'TF',\n//     label: 'French Southern Territories',\n//     phone: '262',\n//   },\n//   { code: 'TG', label: 'Togo', phone: '228' },\n//   { code: 'TH', label: 'Thailand', phone: '66' },\n//   { code: 'TJ', label: 'Tajikistan', phone: '992' },\n//   { code: 'TK', label: 'Tokelau', phone: '690' },\n//   { code: 'TL', label: 'Timor-Leste', phone: '670' },\n//   { code: 'TM', label: 'Turkmenistan', phone: '993' },\n//   { code: 'TN', label: 'Tunisia', phone: '216' },\n//   { code: 'TO', label: 'Tonga', phone: '676' },\n//   { code: 'TR', label: 'Turkey', phone: '90' },\n//   {\n//     code: 'TT',\n//     label: 'Trinidad and Tobago',\n//     phone: '1-868',\n//   },\n//   { code: 'TV', label: 'Tuvalu', phone: '688' },\n//   {\n//     code: 'TW',\n//     label: 'Taiwan, Republic of China',\n//     phone: '886',\n//   },\n//   {\n//     code: 'TZ',\n//     label: 'United Republic of Tanzania',\n//     phone: '255',\n//   },\n//   { code: 'UA', label: 'Ukraine', phone: '380' },\n//   { code: 'UG', label: 'Uganda', phone: '256' },\n//   {\n//     code: 'US',\n//     label: 'United States',\n//     phone: '1',\n//     suggested: true,\n//   },\n//   { code: 'UY', label: 'Uruguay', phone: '598' },\n//   { code: 'UZ', label: 'Uzbekistan', phone: '998' },\n//   {\n//     code: 'VA',\n//     label: 'Holy See (Vatican City State)',\n//     phone: '379',\n//   },\n//   {\n//     code: 'VC',\n//     label: 'Saint Vincent and the Grenadines',\n//     phone: '1-784',\n//   },\n//   { code: 'VE', label: 'Venezuela', phone: '58' },\n//   {\n//     code: 'VG',\n//     label: 'British Virgin Islands',\n//     phone: '1-284',\n//   },\n//   {\n//     code: 'VI',\n//     label: 'US Virgin Islands',\n//     phone: '1-340',\n//   },\n//   { code: 'VN', label: 'Vietnam', phone: '84' },\n//   { code: 'VU', label: 'Vanuatu', phone: '678' },\n//   { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\n//   { code: 'WS', label: 'Samoa', phone: '685' },\n//   { code: 'XK', label: 'Kosovo', phone: '383' },\n//   { code: 'YE', label: 'Yemen', phone: '967' },\n//   { code: 'YT', label: 'Mayotte', phone: '262' },\n//   { code: 'ZA', label: 'South Africa', phone: '27' },\n//   { code: 'ZM', label: 'Zambia', phone: '260' },\n//   { code: 'ZW', label: 'Zimbabwe', phone: '263' },\n// ];\n_s(GoogleMaps, \"BgGra3VoPQwuCsqNLERtUj0qg7Y=\");\n_c = GoogleMaps;\nvar _c;\n$RefreshReg$(_c, \"GoogleMaps\");","map":{"version":3,"names":["React","Box","TextField","Autocomplete","LocationOnIcon","Grid","Typography","parse","debounce","GOOGLE_MAPS_API_KEY","loadScript","src","position","id","script","document","createElement","setAttribute","appendChild","autocompleteService","current","GoogleMaps","onChange","value","setValue","useState","inputValue","setInputValue","options","setOptions","loaded","useRef","console","log","window","querySelector","fetch","useMemo","request","callback","getPlacePredictions","useEffect","active","google","maps","places","AutocompleteService","undefined","input","results","newOptions","width","option","description","x","event","newValue","newInputValue","params","props","matches","structured_formatting","main_text_matched_substrings","parts","main_text","map","match","offset","length","display","color","wordWrap","part","index","fontWeight","highlight","text","secondary_text"],"sources":["/Users/kolt/Development/MapboxProject/map_app/src/components/CountrySelect.jsx"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport parse from 'autosuggest-highlight/parse';\nimport { debounce } from '@mui/material/utils';\n\nconst GOOGLE_MAPS_API_KEY = 'AIzaSyBHk2OdbQzyiXx5QJRnaOQ7Q4ixgEoPQ68';\n\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.setAttribute('async', '');\n  script.setAttribute('id', id);\n  script.src = src;\n  position.appendChild(script);\n}\n\nconst autocompleteService = { current: null };\n\nexport default function GoogleMaps({ onChange }) {\n  const [value, setValue] = React.useState(null);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n  const loaded = React.useRef(false);\nconsole.log(onChange)\n  if (typeof window !== 'undefined' && !loaded.current) {\n    if (!document.querySelector('#google-maps')) {\n      loadScript(\n        `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&libraries=places`,\n        document.querySelector('head'),\n        'google-maps',\n      );\n    }\n\n    loaded.current = true;\n  }\n\n  const fetch = React.useMemo(\n    () =>\n      debounce((request, callback) => {\n        autocompleteService.current.getPlacePredictions(request, callback);\n      }, 400),\n    [],\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!autocompleteService.current && window.google) {\n      autocompleteService.current =\n        new window.google.maps.places.AutocompleteService();\n    }\n    if (!autocompleteService.current) {\n      return undefined;\n    }\n\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n\n    fetch({ input: inputValue }, (results) => {\n      if (active) {\n        let newOptions = [];\n\n        if (value) {\n          newOptions = [value];\n        }\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue, fetch]);\n\n  return (\n    <Autocomplete\n      id=\"google-map-demo\"\n      sx={{ width: 300 }}\n      getOptionLabel={(option) =>\n        typeof option === 'string' ? option : option.description\n      }\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      value={value}\n      noOptionsText=\"No locations\"\n      onChange={(event, newValue) => {\n        setOptions(newValue ? [newValue, ...options] : options);\n        setValue(newValue);\n      }}\n      onInputChange={(event, newInputValue) => {\n        onChange(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Desired Destination\" fullWidth />\n      )}\n      renderOption={(props, option) => {\n        const matches =\n          option.structured_formatting.main_text_matched_substrings || [];\n\n        const parts = parse(\n          option.structured_formatting.main_text,\n          matches.map((match) => [match.offset, match.offset + match.length]),\n        );\n\n        return (\n          <li {...props}>\n            <Grid container alignItems=\"center\">\n              <Grid item sx={{ display: 'flex', width: 44 }}>\n                <LocationOnIcon sx={{ color: 'text.secondary' }} />\n              </Grid>\n              <Grid item sx={{ width: 'calc(100% - 44px)', wordWrap: 'break-word' }}>\n                {parts.map((part, index) => (\n                  <Box\n                    key={index}\n                    component=\"span\"\n                    sx={{ fontWeight: part.highlight ? 'bold' : 'regular' }}\n                  >\n                    {part.text}\n                  </Box>\n                ))}\n\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {option.structured_formatting.secondary_text}\n                </Typography>\n              </Grid>\n            </Grid>\n          </li>\n        );\n      }}\n    />\n  );\n}\n\n\n\n\n\n\n\n\n// import * as React from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import Autocomplete from '@mui/material/Autocomplete';\n\n// export default function CountrySelect() {\n//   return (\n//     <Autocomplete\n//       id=\"country-select-demo\"\n//       sx={{ width: 300 }}\n//       options={countries}\n//       autoHighlight\n//       getOptionLabel={(option) => option.label}\n//       renderOption={(props, option) => (\n//         <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\n//           <img\n//             loading=\"lazy\"\n//             width=\"20\"\n//             src={`https://flagcdn.com/w20/${option.code.toLowerCase()}.png`}\n//             srcSet={`https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`}\n//             alt=\"\"\n//           />\n//           {option.label} ({option.code}) +{option.phone}\n//         </Box>\n//       )}\n//       renderInput={(params) => (\n//         <TextField\n//           {...params}\n//           label=\"Choose a country\"\n//           inputProps={{\n//             ...params.inputProps,\n//             autoComplete: 'new-password', // disable autocomplete and autofill\n//           }}\n//         />\n//       )}\n//     />\n//   );\n// }\n\n// const countries  = [\n//   { code: 'AD', label: 'Andorra', phone: '376' },\n//   {\n//     code: 'AE',\n//     label: 'United Arab Emirates',\n//     phone: '971',\n//   },\n//   { code: 'AF', label: 'Afghanistan', phone: '93' },\n//   {\n//     code: 'AG',\n//     label: 'Antigua and Barbuda',\n//     phone: '1-268',\n//   },\n//   { code: 'AI', label: 'Anguilla', phone: '1-264' },\n//   { code: 'AL', label: 'Albania', phone: '355' },\n//   { code: 'AM', label: 'Armenia', phone: '374' },\n//   { code: 'AO', label: 'Angola', phone: '244' },\n//   { code: 'AQ', label: 'Antarctica', phone: '672' },\n//   { code: 'AR', label: 'Argentina', phone: '54' },\n//   { code: 'AS', label: 'American Samoa', phone: '1-684' },\n//   { code: 'AT', label: 'Austria', phone: '43' },\n//   {\n//     code: 'AU',\n//     label: 'Australia',\n//     phone: '61',\n//     suggested: true,\n//   },\n//   { code: 'AW', label: 'Aruba', phone: '297' },\n//   { code: 'AX', label: 'Alland Islands', phone: '358' },\n//   { code: 'AZ', label: 'Azerbaijan', phone: '994' },\n//   {\n//     code: 'BA',\n//     label: 'Bosnia and Herzegovina',\n//     phone: '387',\n//   },\n//   { code: 'BB', label: 'Barbados', phone: '1-246' },\n//   { code: 'BD', label: 'Bangladesh', phone: '880' },\n//   { code: 'BE', label: 'Belgium', phone: '32' },\n//   { code: 'BF', label: 'Burkina Faso', phone: '226' },\n//   { code: 'BG', label: 'Bulgaria', phone: '359' },\n//   { code: 'BH', label: 'Bahrain', phone: '973' },\n//   { code: 'BI', label: 'Burundi', phone: '257' },\n//   { code: 'BJ', label: 'Benin', phone: '229' },\n//   { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\n//   { code: 'BM', label: 'Bermuda', phone: '1-441' },\n//   { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\n//   { code: 'BO', label: 'Bolivia', phone: '591' },\n//   { code: 'BR', label: 'Brazil', phone: '55' },\n//   { code: 'BS', label: 'Bahamas', phone: '1-242' },\n//   { code: 'BT', label: 'Bhutan', phone: '975' },\n//   { code: 'BV', label: 'Bouvet Island', phone: '47' },\n//   { code: 'BW', label: 'Botswana', phone: '267' },\n//   { code: 'BY', label: 'Belarus', phone: '375' },\n//   { code: 'BZ', label: 'Belize', phone: '501' },\n//   {\n//     code: 'CA',\n//     label: 'Canada',\n//     phone: '1',\n//     suggested: true,\n//   },\n//   {\n//     code: 'CC',\n//     label: 'Cocos (Keeling) Islands',\n//     phone: '61',\n//   },\n//   {\n//     code: 'CD',\n//     label: 'Congo, Democratic Republic of the',\n//     phone: '243',\n//   },\n//   {\n//     code: 'CF',\n//     label: 'Central African Republic',\n//     phone: '236',\n//   },\n//   {\n//     code: 'CG',\n//     label: 'Congo, Republic of the',\n//     phone: '242',\n//   },\n//   { code: 'CH', label: 'Switzerland', phone: '41' },\n//   { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\n//   { code: 'CK', label: 'Cook Islands', phone: '682' },\n//   { code: 'CL', label: 'Chile', phone: '56' },\n//   { code: 'CM', label: 'Cameroon', phone: '237' },\n//   { code: 'CN', label: 'China', phone: '86' },\n//   { code: 'CO', label: 'Colombia', phone: '57' },\n//   { code: 'CR', label: 'Costa Rica', phone: '506' },\n//   { code: 'CU', label: 'Cuba', phone: '53' },\n//   { code: 'CV', label: 'Cape Verde', phone: '238' },\n//   { code: 'CW', label: 'Curacao', phone: '599' },\n//   { code: 'CX', label: 'Christmas Island', phone: '61' },\n//   { code: 'CY', label: 'Cyprus', phone: '357' },\n//   { code: 'CZ', label: 'Czech Republic', phone: '420' },\n//   {\n//     code: 'DE',\n//     label: 'Germany',\n//     phone: '49',\n//     suggested: true,\n//   },\n//   { code: 'DJ', label: 'Djibouti', phone: '253' },\n//   { code: 'DK', label: 'Denmark', phone: '45' },\n//   { code: 'DM', label: 'Dominica', phone: '1-767' },\n//   {\n//     code: 'DO',\n//     label: 'Dominican Republic',\n//     phone: '1-809',\n//   },\n//   { code: 'DZ', label: 'Algeria', phone: '213' },\n//   { code: 'EC', label: 'Ecuador', phone: '593' },\n//   { code: 'EE', label: 'Estonia', phone: '372' },\n//   { code: 'EG', label: 'Egypt', phone: '20' },\n//   { code: 'EH', label: 'Western Sahara', phone: '212' },\n//   { code: 'ER', label: 'Eritrea', phone: '291' },\n//   { code: 'ES', label: 'Spain', phone: '34' },\n//   { code: 'ET', label: 'Ethiopia', phone: '251' },\n//   { code: 'FI', label: 'Finland', phone: '358' },\n//   { code: 'FJ', label: 'Fiji', phone: '679' },\n//   {\n//     code: 'FK',\n//     label: 'Falkland Islands (Malvinas)',\n//     phone: '500',\n//   },\n//   {\n//     code: 'FM',\n//     label: 'Micronesia, Federated States of',\n//     phone: '691',\n//   },\n//   { code: 'FO', label: 'Faroe Islands', phone: '298' },\n//   {\n//     code: 'FR',\n//     label: 'France',\n//     phone: '33',\n//     suggested: true,\n//   },\n//   { code: 'GA', label: 'Gabon', phone: '241' },\n//   { code: 'GB', label: 'United Kingdom', phone: '44' },\n//   { code: 'GD', label: 'Grenada', phone: '1-473' },\n//   { code: 'GE', label: 'Georgia', phone: '995' },\n//   { code: 'GF', label: 'French Guiana', phone: '594' },\n//   { code: 'GG', label: 'Guernsey', phone: '44' },\n//   { code: 'GH', label: 'Ghana', phone: '233' },\n//   { code: 'GI', label: 'Gibraltar', phone: '350' },\n//   { code: 'GL', label: 'Greenland', phone: '299' },\n//   { code: 'GM', label: 'Gambia', phone: '220' },\n//   { code: 'GN', label: 'Guinea', phone: '224' },\n//   { code: 'GP', label: 'Guadeloupe', phone: '590' },\n//   { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\n//   { code: 'GR', label: 'Greece', phone: '30' },\n//   {\n//     code: 'GS',\n//     label: 'South Georgia and the South Sandwich Islands',\n//     phone: '500',\n//   },\n//   { code: 'GT', label: 'Guatemala', phone: '502' },\n//   { code: 'GU', label: 'Guam', phone: '1-671' },\n//   { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\n//   { code: 'GY', label: 'Guyana', phone: '592' },\n//   { code: 'HK', label: 'Hong Kong', phone: '852' },\n//   {\n//     code: 'HM',\n//     label: 'Heard Island and McDonald Islands',\n//     phone: '672',\n//   },\n//   { code: 'HN', label: 'Honduras', phone: '504' },\n//   { code: 'HR', label: 'Croatia', phone: '385' },\n//   { code: 'HT', label: 'Haiti', phone: '509' },\n//   { code: 'HU', label: 'Hungary', phone: '36' },\n//   { code: 'ID', label: 'Indonesia', phone: '62' },\n//   { code: 'IE', label: 'Ireland', phone: '353' },\n//   { code: 'IL', label: 'Israel', phone: '972' },\n//   { code: 'IM', label: 'Isle of Man', phone: '44' },\n//   { code: 'IN', label: 'India', phone: '91' },\n//   {\n//     code: 'IO',\n//     label: 'British Indian Ocean Territory',\n//     phone: '246',\n//   },\n//   { code: 'IQ', label: 'Iraq', phone: '964' },\n//   {\n//     code: 'IR',\n//     label: 'Iran, Islamic Republic of',\n//     phone: '98',\n//   },\n//   { code: 'IS', label: 'Iceland', phone: '354' },\n//   { code: 'IT', label: 'Italy', phone: '39' },\n//   { code: 'JE', label: 'Jersey', phone: '44' },\n//   { code: 'JM', label: 'Jamaica', phone: '1-876' },\n//   { code: 'JO', label: 'Jordan', phone: '962' },\n//   {\n//     code: 'JP',\n//     label: 'Japan',\n//     phone: '81',\n//     suggested: true,\n//   },\n//   { code: 'KE', label: 'Kenya', phone: '254' },\n//   { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\n//   { code: 'KH', label: 'Cambodia', phone: '855' },\n//   { code: 'KI', label: 'Kiribati', phone: '686' },\n//   { code: 'KM', label: 'Comoros', phone: '269' },\n//   {\n//     code: 'KN',\n//     label: 'Saint Kitts and Nevis',\n//     phone: '1-869',\n//   },\n//   {\n//     code: 'KP',\n//     label: \"Korea, Democratic People's Republic of\",\n//     phone: '850',\n//   },\n//   { code: 'KR', label: 'Korea, Republic of', phone: '82' },\n//   { code: 'KW', label: 'Kuwait', phone: '965' },\n//   { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\n//   { code: 'KZ', label: 'Kazakhstan', phone: '7' },\n//   {\n//     code: 'LA',\n//     label: \"Lao People's Democratic Republic\",\n//     phone: '856',\n//   },\n//   { code: 'LB', label: 'Lebanon', phone: '961' },\n//   { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\n//   { code: 'LI', label: 'Liechtenstein', phone: '423' },\n//   { code: 'LK', label: 'Sri Lanka', phone: '94' },\n//   { code: 'LR', label: 'Liberia', phone: '231' },\n//   { code: 'LS', label: 'Lesotho', phone: '266' },\n//   { code: 'LT', label: 'Lithuania', phone: '370' },\n//   { code: 'LU', label: 'Luxembourg', phone: '352' },\n//   { code: 'LV', label: 'Latvia', phone: '371' },\n//   { code: 'LY', label: 'Libya', phone: '218' },\n//   { code: 'MA', label: 'Morocco', phone: '212' },\n//   { code: 'MC', label: 'Monaco', phone: '377' },\n//   {\n//     code: 'MD',\n//     label: 'Moldova, Republic of',\n//     phone: '373',\n//   },\n//   { code: 'ME', label: 'Montenegro', phone: '382' },\n//   {\n//     code: 'MF',\n//     label: 'Saint Martin (French part)',\n//     phone: '590',\n//   },\n//   { code: 'MG', label: 'Madagascar', phone: '261' },\n//   { code: 'MH', label: 'Marshall Islands', phone: '692' },\n//   {\n//     code: 'MK',\n//     label: 'Macedonia, the Former Yugoslav Republic of',\n//     phone: '389',\n//   },\n//   { code: 'ML', label: 'Mali', phone: '223' },\n//   { code: 'MM', label: 'Myanmar', phone: '95' },\n//   { code: 'MN', label: 'Mongolia', phone: '976' },\n//   { code: 'MO', label: 'Macao', phone: '853' },\n//   {\n//     code: 'MP',\n//     label: 'Northern Mariana Islands',\n//     phone: '1-670',\n//   },\n//   { code: 'MQ', label: 'Martinique', phone: '596' },\n//   { code: 'MR', label: 'Mauritania', phone: '222' },\n//   { code: 'MS', label: 'Montserrat', phone: '1-664' },\n//   { code: 'MT', label: 'Malta', phone: '356' },\n//   { code: 'MU', label: 'Mauritius', phone: '230' },\n//   { code: 'MV', label: 'Maldives', phone: '960' },\n//   { code: 'MW', label: 'Malawi', phone: '265' },\n//   { code: 'MX', label: 'Mexico', phone: '52' },\n//   { code: 'MY', label: 'Malaysia', phone: '60' },\n//   { code: 'MZ', label: 'Mozambique', phone: '258' },\n//   { code: 'NA', label: 'Namibia', phone: '264' },\n//   { code: 'NC', label: 'New Caledonia', phone: '687' },\n//   { code: 'NE', label: 'Niger', phone: '227' },\n//   { code: 'NF', label: 'Norfolk Island', phone: '672' },\n//   { code: 'NG', label: 'Nigeria', phone: '234' },\n//   { code: 'NI', label: 'Nicaragua', phone: '505' },\n//   { code: 'NL', label: 'Netherlands', phone: '31' },\n//   { code: 'NO', label: 'Norway', phone: '47' },\n//   { code: 'NP', label: 'Nepal', phone: '977' },\n//   { code: 'NR', label: 'Nauru', phone: '674' },\n//   { code: 'NU', label: 'Niue', phone: '683' },\n//   { code: 'NZ', label: 'New Zealand', phone: '64' },\n//   { code: 'OM', label: 'Oman', phone: '968' },\n//   { code: 'PA', label: 'Panama', phone: '507' },\n//   { code: 'PE', label: 'Peru', phone: '51' },\n//   { code: 'PF', label: 'French Polynesia', phone: '689' },\n//   { code: 'PG', label: 'Papua New Guinea', phone: '675' },\n//   { code: 'PH', label: 'Philippines', phone: '63' },\n//   { code: 'PK', label: 'Pakistan', phone: '92' },\n//   { code: 'PL', label: 'Poland', phone: '48' },\n//   {\n//     code: 'PM',\n//     label: 'Saint Pierre and Miquelon',\n//     phone: '508',\n//   },\n//   { code: 'PN', label: 'Pitcairn', phone: '870' },\n//   { code: 'PR', label: 'Puerto Rico', phone: '1' },\n//   {\n//     code: 'PS',\n//     label: 'Palestine, State of',\n//     phone: '970',\n//   },\n//   { code: 'PT', label: 'Portugal', phone: '351' },\n//   { code: 'PW', label: 'Palau', phone: '680' },\n//   { code: 'PY', label: 'Paraguay', phone: '595' },\n//   { code: 'QA', label: 'Qatar', phone: '974' },\n//   { code: 'RE', label: 'Reunion', phone: '262' },\n//   { code: 'RO', label: 'Romania', phone: '40' },\n//   { code: 'RS', label: 'Serbia', phone: '381' },\n//   { code: 'RU', label: 'Russian Federation', phone: '7' },\n//   { code: 'RW', label: 'Rwanda', phone: '250' },\n//   { code: 'SA', label: 'Saudi Arabia', phone: '966' },\n//   { code: 'SB', label: 'Solomon Islands', phone: '677' },\n//   { code: 'SC', label: 'Seychelles', phone: '248' },\n//   { code: 'SD', label: 'Sudan', phone: '249' },\n//   { code: 'SE', label: 'Sweden', phone: '46' },\n//   { code: 'SG', label: 'Singapore', phone: '65' },\n//   { code: 'SH', label: 'Saint Helena', phone: '290' },\n//   { code: 'SI', label: 'Slovenia', phone: '386' },\n//   {\n//     code: 'SJ',\n//     label: 'Svalbard and Jan Mayen',\n//     phone: '47',\n//   },\n//   { code: 'SK', label: 'Slovakia', phone: '421' },\n//   { code: 'SL', label: 'Sierra Leone', phone: '232' },\n//   { code: 'SM', label: 'San Marino', phone: '378' },\n//   { code: 'SN', label: 'Senegal', phone: '221' },\n//   { code: 'SO', label: 'Somalia', phone: '252' },\n//   { code: 'SR', label: 'Suriname', phone: '597' },\n//   { code: 'SS', label: 'South Sudan', phone: '211' },\n//   {\n//     code: 'ST',\n//     label: 'Sao Tome and Principe',\n//     phone: '239',\n//   },\n//   { code: 'SV', label: 'El Salvador', phone: '503' },\n//   {\n//     code: 'SX',\n//     label: 'Sint Maarten (Dutch part)',\n//     phone: '1-721',\n//   },\n//   {\n//     code: 'SY',\n//     label: 'Syrian Arab Republic',\n//     phone: '963',\n//   },\n//   { code: 'SZ', label: 'Swaziland', phone: '268' },\n//   {\n//     code: 'TC',\n//     label: 'Turks and Caicos Islands',\n//     phone: '1-649',\n//   },\n//   { code: 'TD', label: 'Chad', phone: '235' },\n//   {\n//     code: 'TF',\n//     label: 'French Southern Territories',\n//     phone: '262',\n//   },\n//   { code: 'TG', label: 'Togo', phone: '228' },\n//   { code: 'TH', label: 'Thailand', phone: '66' },\n//   { code: 'TJ', label: 'Tajikistan', phone: '992' },\n//   { code: 'TK', label: 'Tokelau', phone: '690' },\n//   { code: 'TL', label: 'Timor-Leste', phone: '670' },\n//   { code: 'TM', label: 'Turkmenistan', phone: '993' },\n//   { code: 'TN', label: 'Tunisia', phone: '216' },\n//   { code: 'TO', label: 'Tonga', phone: '676' },\n//   { code: 'TR', label: 'Turkey', phone: '90' },\n//   {\n//     code: 'TT',\n//     label: 'Trinidad and Tobago',\n//     phone: '1-868',\n//   },\n//   { code: 'TV', label: 'Tuvalu', phone: '688' },\n//   {\n//     code: 'TW',\n//     label: 'Taiwan, Republic of China',\n//     phone: '886',\n//   },\n//   {\n//     code: 'TZ',\n//     label: 'United Republic of Tanzania',\n//     phone: '255',\n//   },\n//   { code: 'UA', label: 'Ukraine', phone: '380' },\n//   { code: 'UG', label: 'Uganda', phone: '256' },\n//   {\n//     code: 'US',\n//     label: 'United States',\n//     phone: '1',\n//     suggested: true,\n//   },\n//   { code: 'UY', label: 'Uruguay', phone: '598' },\n//   { code: 'UZ', label: 'Uzbekistan', phone: '998' },\n//   {\n//     code: 'VA',\n//     label: 'Holy See (Vatican City State)',\n//     phone: '379',\n//   },\n//   {\n//     code: 'VC',\n//     label: 'Saint Vincent and the Grenadines',\n//     phone: '1-784',\n//   },\n//   { code: 'VE', label: 'Venezuela', phone: '58' },\n//   {\n//     code: 'VG',\n//     label: 'British Virgin Islands',\n//     phone: '1-284',\n//   },\n//   {\n//     code: 'VI',\n//     label: 'US Virgin Islands',\n//     phone: '1-340',\n//   },\n//   { code: 'VN', label: 'Vietnam', phone: '84' },\n//   { code: 'VU', label: 'Vanuatu', phone: '678' },\n//   { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\n//   { code: 'WS', label: 'Samoa', phone: '685' },\n//   { code: 'XK', label: 'Kosovo', phone: '383' },\n//   { code: 'YE', label: 'Yemen', phone: '967' },\n//   { code: 'YT', label: 'Mayotte', phone: '262' },\n//   { code: 'ZA', label: 'South Africa', phone: '27' },\n//   { code: 'ZM', label: 'Zambia', phone: '260' },\n//   { code: 'ZW', label: 'Zimbabwe', phone: '263' },\n// ];"],"mappings":"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,EAAE,EAAE;cAAEnB,KAAK,EAAE,mBAAmB;cAAEoB,QAAQ,EAAE;YAAa,CAAE;YAAA,WACnER,KAAK,CAACE,GAAG,CAAC,CAACO,IAAI,EAAEC,KAAK,kBACrB,QAAC,GAAG;cAEF,SAAS,EAAC,MAAM;cAChB,EAAE,EAAE;gBAAEC,UAAU,EAAEF,IAAI,CAACG,SAAS,GAAG,MAAM,GAAG;cAAU,CAAE;cAAA,UAEvDH,IAAI,CAACI;YAAI,GAJLH,KAAK;cAAA;cAAA;cAAA;YAAA,QAMb,CAAC,eAEF,QAAC,UAAU;cAAC,OAAO,EAAC,OAAO;cAAC,KAAK,EAAC,gBAAgB;cAAA,UAC/CrB,MAAM,CAACS,qBAAqB,CAACgB;YAAc;cAAA;cAAA;cAAA;YAAA,QACjC;UAAA;YAAA;YAAA;YAAA;UAAA,QACR;QAAA;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QACJ;IAET;EAAE;IAAA;IAAA;IAAA;EAAA,QACF;AAEN;;AASA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GAllBwBxD,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}